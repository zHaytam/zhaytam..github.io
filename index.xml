<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Awaiting Bits</title>
    <link>https://blog.zhaytam.com/</link>
    <description>Recent content on Awaiting Bits</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.zhaytam.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Aspect Oriented Programming using proxies in ASP.NET Core</title>
      <link>https://blog.zhaytam.com/2020/08/16/aspnetcore-dynamic-proxies-for-aop/</link>
      <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2020/08/16/aspnetcore-dynamic-proxies-for-aop/</guid>
      <description>After working with Spring Boot for a couple of months now, one thing that I find lacking in ASP.NET Core (C#) is Aspect Oriented Programming (AOP).
 In computing, aspect-oriented programming (AOP) is a programming paradigm that aims to increase modularity by allowing the separation of cross-cutting concerns. It does so by adding additional behavior to existing code (an advice) without modifying the code itself, instead separately specifying which code is modified via a &amp;ldquo;pointcut&amp;rdquo; specification, such as &amp;ldquo;log all function calls when the function&#39;s name begins with &amp;lsquo;set&amp;rsquo;&amp;quot;.</description>
    </item>
    
    <item>
      <title>C# 9 - Immutability - Records &amp; Init-only Properties</title>
      <link>https://blog.zhaytam.com/2020/07/03/csharp-9-immutability-records-init-only-properties/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2020/07/03/csharp-9-immutability-records-init-only-properties/</guid>
      <description>Immutability has been getting popular these last years, especially with the rise of not only functional programming and but also JS frameworks such as React.
It&#39;s an important concept for many reasons, but I won&#39;t get into it in this blog post because it&#39;s not the point. Although I would urge you to either read The Dao of Immutability or watch Jon Skeet&#39;s The changing state of immutability in c# video, which explain it in details.</description>
    </item>
    
    <item>
      <title>Deploy Blazor WASM to GitHub Pages using GitHub Actions</title>
      <link>https://blog.zhaytam.com/2020/06/08/deploy-blazor-wasm-github-pages-using-actions/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2020/06/08/deploy-blazor-wasm-github-pages-using-actions/</guid>
      <description>Blazor WebAssembly was out a couple of weeks ago, and I can&#39;t stop playing with it! It&#39;s such a refreshing pause from all the JavaScript SPA frameworks.
As with any other SPA framework, you can deploy Blazor WASM in Github Pages! Today I&#39;ll be showing you step by step how to do so.</description>
    </item>
    
    <item>
      <title>Dynamic Sorting and Filtering in C#</title>
      <link>https://blog.zhaytam.com/2020/05/17/dynamic-sorting-filtering-csharp/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2020/05/17/dynamic-sorting-filtering-csharp/</guid>
      <description>If you ever wondered how you could dynamically filter and/or sort your queries without having to write a huge switch statement with all the possible properties and operations, you&#39;ve come to the right place!
Today we&#39;ll see how we can generate these types of operations at runtime and on the fly.</description>
    </item>
    
    <item>
      <title>Health Checks in ASP.NET Core</title>
      <link>https://blog.zhaytam.com/2020/04/30/health-checks-aspnetcore/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2020/04/30/health-checks-aspnetcore/</guid>
      <description>Health checks are a set of checks (duh) that you perform in order to tell whether an application/service is up, running &amp;amp; healthy or not. It&#39;s usually one or more endpoints that reports the status, the response differs from language/framework to an other.
Health checks are very useful especially when your application depends on other things like a database or even other services.</description>
    </item>
    
    <item>
      <title>Writing maintainable Spark jobs in Scala</title>
      <link>https://blog.zhaytam.com/2020/03/06/maintainable-spark-jobs-scala/</link>
      <pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2020/03/06/maintainable-spark-jobs-scala/</guid>
      <description>When working on Spark jobs (in Scala), we often sequentially write the code in a single class, giving more attention to the transformations we do and forgetting how our code is structured or even if it&#39;s tested.
Today I&#39;ll be talking about how I personally like to structure and design my Spark jobs, such as they are highly maintainable and testable.</description>
    </item>
    
    <item>
      <title>Behavior Trees - Introduction</title>
      <link>https://blog.zhaytam.com/2020/01/07/behavior-trees-introduction/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2020/01/07/behavior-trees-introduction/</guid>
      <description>Two months ago, I was looking for a way to program an AI for a video game and I stumbled upon Behavior Trees. Today I&#39;ll be talking about what they are, why they are used and how.
Behavior Trees Originally, behavior trees were used in the game industry to model the behavior of NPC characters, it then started getting used in other domains, such as robotics.</description>
    </item>
    
    <item>
      <title>Trying out the new DataFrame package in .NET Core</title>
      <link>https://blog.zhaytam.com/2019/12/17/trying-out-dataframe-package-netcore/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/12/17/trying-out-dataframe-package-netcore/</guid>
      <description>Yesterday, Prashanth Govindarajan posted an article about DataFrame on the .NET Blog. I got excited and wanted to try the library as soon as I could. In this post, I will explain what the library is intended for and what are my thoughts on it.
The package The DataFrame related classes were introduced in the package Microsoft.</description>
    </item>
    
    <item>
      <title>From Wordpress to Hugo, Self Hosting to Github Pages</title>
      <link>https://blog.zhaytam.com/2019/12/13/wordpress-to-hugo-self-hosting-to-github-pages/</link>
      <pubDate>Fri, 13 Dec 2019 10:26:06 +0100</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/12/13/wordpress-to-hugo-self-hosting-to-github-pages/</guid>
      <description>These past months I realized that my blog, which is made using Wordpress, is very slow and that hurts the traffic. So I went looking for the problems and their solutions but nothing really worked, so I decided to switch everything.
Today I&#39;ll talk about that decision, its advantages and disadvantages.</description>
    </item>
    
    <item>
      <title>Socks5 – A .NET Core implementation from scratch</title>
      <link>https://blog.zhaytam.com/2019/11/15/socks5-a-net-core-implementation-from-scratch/</link>
      <pubDate>Fri, 15 Nov 2019 11:23:57 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/11/15/socks5-a-net-core-implementation-from-scratch/</guid>
      <description>A few days ago I needed a way to connect to a server using a Socks5 proxy but couldn&#39;t find an up-to-date implementation for .NET Core, so I decided to give it a go myself.
The implementation is pretty straightforward and easy, I got inspired from starksoft-aspen and followed the official RFC.</description>
    </item>
    
    <item>
      <title>Color quantization using K-means clustering in ML.NET</title>
      <link>https://blog.zhaytam.com/2019/10/15/color-quantization-using-k-means-clustering-in-ml-net/</link>
      <pubDate>Tue, 15 Oct 2019 09:39:51 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/10/15/color-quantization-using-k-means-clustering-in-ml-net/</guid>
      <description>When I was looking for K-means use cases, I found out about Color quantization, a very interesting . I implemented it in Python and was wondering whether it would be as easy to implement in ML.NET.
All the code is available in this GitHub repository.
What is color quantization Color quantization is the usage of quantization, a lossy compression technique, in color spaces in order to reduce the number of unique colors in an image.</description>
    </item>
    
    <item>
      <title>Google Sign-In for ASP.NET Core Web APIs</title>
      <link>https://blog.zhaytam.com/2019/10/03/google-sign-in-asp-net-core-web-api/</link>
      <pubDate>Thu, 03 Oct 2019 08:35:40 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/10/03/google-sign-in-asp-net-core-web-api/</guid>
      <description>There is a lot of tutorials that show how to integrate Google Sign-In in your website, but only a handful show how to integrate it in a REST API.
Today I&#39;ll be showing how you can add Google Sign-In and still manage users in your back-end.
Overview Here&#39;s a sequence diagram showing how it all works:</description>
    </item>
    
    <item>
      <title>What’s new in ASP.NET Core 3.0, Blazor and SignalR</title>
      <link>https://blog.zhaytam.com/2019/09/13/whats-new-asp-net-core-3/</link>
      <pubDate>Fri, 13 Sep 2019 18:06:20 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/09/13/whats-new-asp-net-core-3/</guid>
      <description>I got interested in ASP.NET Core 3.0 since the first preview and followed it very closely. I started using it since preview2 and will now soon go to production with it (preview9).
I compiled this list to have all the new features, improvements and breaking changes that happened during this time for easy access and accessibility.</description>
    </item>
    
    <item>
      <title>NDepend, a powerful static analysis tool for .NET</title>
      <link>https://blog.zhaytam.com/2019/08/26/ndepend-static-analysis-tool-dotnet/</link>
      <pubDate>Mon, 26 Aug 2019 12:57:51 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/08/26/ndepend-static-analysis-tool-dotnet/</guid>
      <description>Patrick Smacchia, the author of NDepend, offered me a license for NDepend and I was thrilled, as I was always interested in it. In this blog post, I&#39;ll be talking about my opinion and thoughts after trying it for the first time.
Static code analysis Being able to check the quality of your source code before it&#39;s even ran is a very valuable thing to have.</description>
    </item>
    
    <item>
      <title>Outliers Detection in PySpark #3 – K-means</title>
      <link>https://blog.zhaytam.com/2019/08/06/outliers-detection-in-pyspark-3-k-means/</link>
      <pubDate>Tue, 06 Aug 2019 10:33:10 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/08/06/outliers-detection-in-pyspark-3-k-means/</guid>
      <description>In parts #1 and #2 of the “Outliers Detection in PySpark” series, I talked about Anomaly Detection, Outliers Detection and the interquartile range (boxplot) method. In this third and last part, I will talk about how one can use the popular K-means clustering algorithm to detect outliers.
K-means K-means is one of the easiest and most popular unsupervised algorithms in Machine Learning for Clustering.</description>
    </item>
    
    <item>
      <title>Outliers Detection in PySpark #2 – Interquartile Range</title>
      <link>https://blog.zhaytam.com/2019/07/15/outliers-detection-in-pyspark-2-interquartile-range/</link>
      <pubDate>Mon, 15 Jul 2019 13:31:51 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/07/15/outliers-detection-in-pyspark-2-interquartile-range/</guid>
      <description>In the first part, I talked about what Data Quality, Anomaly Detection and Outliers Detection are and what’s the difference between outliers detection and novelty detection. In this part, I will talk about a very known and easy method to detect outliers called Interquartile Range.
Introduction The Interquartile Range method, also known as IQR, was developed by John Widler Turky, an American mathematician best known for development of the FFT algorithm and box plot.</description>
    </item>
    
    <item>
      <title>Outliers Detection in PySpark #1 – Intro</title>
      <link>https://blog.zhaytam.com/2019/06/21/outliers-detection-pyspark-1-intro/</link>
      <pubDate>Fri, 21 Jun 2019 13:34:37 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/06/21/outliers-detection-pyspark-1-intro/</guid>
      <description>These last months, while working on my graduation project, I had the chance to learn a lot about Data Quality, Anomaly Detection and especially Outliers Detection.
In these series, I will be explaining what outliers are, the difference between novelty and outliers detection and how we can detect outliers using different algorithms.</description>
    </item>
    
    <item>
      <title>EmailSender Service using FluentEmail &amp; Razor Templates</title>
      <link>https://blog.zhaytam.com/2019/06/08/emailsender-service-fluent-email-razor-templates/</link>
      <pubDate>Sat, 08 Jun 2019 12:58:48 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/06/08/emailsender-service-fluent-email-razor-templates/</guid>
      <description>Sending emails is a very important functionality for any website nowdays, either to send account verification emails, newsletter emails or even notification emails.
Today I&#39;ll be showing how you can create your own EmailSender Service in ASP.NET Core using FluentEmail and Razor templates for rich HTML emails.
EmailSender interface If you&#39;re working with a project that implements a Clean Architecture, you&#39;ll want to create an interface in your Core project to define what you need the service to do, as well as to have the possibility to use it from the Core project too.</description>
    </item>
    
    <item>
      <title>Instanciating a Type at Runtime – C# Benchmarks</title>
      <link>https://blog.zhaytam.com/2019/04/26/fas-to-instanciating-a-type-at-runtime/</link>
      <pubDate>Fri, 26 Apr 2019 00:06:15 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/04/26/fas-to-instanciating-a-type-at-runtime/</guid>
      <description>Assuming you are familiar with C#;
If I give you a Type and tell you to create an object with it, you would automatically think of Activator.CreateInstance right?
What if I tell you that instanciating a Type using Expression Trees is much faster?
The code for the benchmarks is in this repository.</description>
    </item>
    
    <item>
      <title>Powerline and ZSH’s Agnoster theme in VS Code</title>
      <link>https://blog.zhaytam.com/2019/04/19/powerline-and-zshs-agnoster-theme-in-vs-code/</link>
      <pubDate>Fri, 19 Apr 2019 15:50:27 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/04/19/powerline-and-zshs-agnoster-theme-in-vs-code/</guid>
      <description>Today I was installing Oh My ZSH and the theme Agnoster and it worked in the the normal terminal but not in Visual Studio Code&#39;s terminal, as it needs a monospaced font and Powerline isn&#39;t one.
In this post I&#39;ll explain how to quickly fix it.
The problem   Problem   VS Code defaults the terminal&#39;s font to the editor&#39;s font, and since the Agnoster theme needs Powerline, the terminal outputs non-sense characters.</description>
    </item>
    
    <item>
      <title>ASP.NET Core – Checking ModelState.IsValid is boring</title>
      <link>https://blog.zhaytam.com/2019/04/13/asp-net-core-checking-modelstate-isvalid-is-boring/</link>
      <pubDate>Sat, 13 Apr 2019 17:12:34 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/04/13/asp-net-core-checking-modelstate-isvalid-is-boring/</guid>
      <description>Checking if a model is valid is pretty an automatic behavior at this point. Whenever a request expects a model, we need to make sure that the validation is good, and we use ModelState.IsValid for that.
But that becomes boring, most of the time (if not always) we redirect to the same page, another page or return a bad request in case of an API.</description>
    </item>
    
    <item>
      <title>Repository Pattern – Generic Async Repositories in C#</title>
      <link>https://blog.zhaytam.com/2019/03/14/generic-repository-pattern-csharp/</link>
      <pubDate>Thu, 14 Mar 2019 15:00:44 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/03/14/generic-repository-pattern-csharp/</guid>
      <description>Repository Pattern was first introduced in the Domain Driven Development back in 2004 and has since then gained a lot of popularity.
Today I&#39;ll show you how you can implement a generic async version of it in C# (ASP.NET Core specifically).
The code of this blog post is available here.</description>
    </item>
    
    <item>
      <title>How to lower the volume of the annoying Windows 10 notifications</title>
      <link>https://blog.zhaytam.com/2019/02/08/lower-windows-10-notifications-volume/</link>
      <pubDate>Fri, 08 Feb 2019 19:46:21 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/02/08/lower-windows-10-notifications-volume/</guid>
      <description>I bought a laptop a long time ago but I never really used it enough to notice this.
I am now using it every day and every time a Windows 10 notification shows up, both my ears bleed (not really but you get the idea).
The volume of these notifications is EXTREMELY loud.</description>
    </item>
    
    <item>
      <title>Creating a Mouseless Context Menu in Unity</title>
      <link>https://blog.zhaytam.com/2019/02/02/creating-mouseless-context-menu-unity/</link>
      <pubDate>Sat, 02 Feb 2019 14:50:31 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/02/02/creating-mouseless-context-menu-unity/</guid>
      <description>I was prototyping a 2D Side Scroller game in Unity a week ago and started implementing an Inventory System (Equipments, slots, etc…).
Unfortunately, Unity didn&#39;t have a Context Menu out of the box so I searched a bit and found this, which helped me get an idea of how to implement one as well as make it completely mouseless, since my game was mouseless itself.</description>
    </item>
    
    <item>
      <title>Association Rule Mining using Apriori Algorithm</title>
      <link>https://blog.zhaytam.com/2018/10/23/association-rule-mining-using-apriori-algorithm/</link>
      <pubDate>Tue, 23 Oct 2018 17:52:24 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2018/10/23/association-rule-mining-using-apriori-algorithm/</guid>
      <description>Have you ever wondered how Amazon suggets to us items to buy when we&#39;re looking at a product (labeled as “Frequently bought together”)?
For example, when checking a GPU product (e.g. GTX 1080), amazon will tell you that the gpu, i7 cpu and RAM are frequently bought together.
Which is true because a lot of people buy their components grouped when building a desktop pc.</description>
    </item>
    
    <item>
      <title>Generate a documentation for an ASP.NET Core Web API using Swagger</title>
      <link>https://blog.zhaytam.com/2018/09/23/generate-aspnetcore-web-api-doc-swagger/</link>
      <pubDate>Sun, 23 Sep 2018 18:44:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2018/09/23/generate-aspnetcore-web-api-doc-swagger/</guid>
      <description>Hi everyone! I hope you&#39;re having a great sunday.
Me and my collegue decided this week to rewrite an api made with Laravel Lumen using ASP.NET Core. While doing so, I was wondering wheter some kind of tool existed to help generate the documentation of the API (since we all know writing a documentation is the least fun thing in programming) and I came across Swagger.</description>
    </item>
    
    <item>
      <title>Creating GIFs in Python using Pillow (PIL Fork)</title>
      <link>https://blog.zhaytam.com/2018/08/21/creating-gifs-using-python-pillow/</link>
      <pubDate>Tue, 21 Aug 2018 20:09:28 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2018/08/21/creating-gifs-using-python-pillow/</guid>
      <description>I was working on a personal project the other day and I needed to create some images (frames) and save them as a playable GIF. Working in Python, I excepted to find an easy solution fast but oh boy did it take me too long to find it.
Here I am now, creating a blog post to help future people looking to create gifs in Python.</description>
    </item>
    
    <item>
      <title>Implementing a flexible neural network with backpropagation from scratch</title>
      <link>https://blog.zhaytam.com/2018/08/15/implement-neural-network-backpropagation/</link>
      <pubDate>Wed, 15 Aug 2018 21:39:58 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2018/08/15/implement-neural-network-backpropagation/</guid>
      <description>Implementing your own neural network can be hard, especially if you&#39;re like me, coming from a computer science background, math equations/syntax makes you dizzy and you would understand things better using actual code.
Today I&#39;ll show you how easy it is to implement a flexible neural network and train it using the backpropagation algorithm.</description>
    </item>
    
    <item>
      <title>OpenStreetMap, Google Maps alternative using Leaflet</title>
      <link>https://blog.zhaytam.com/2018/07/20/openstreetmap-googlemaps-alternative/</link>
      <pubDate>Fri, 20 Jul 2018 18:39:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2018/07/20/openstreetmap-googlemaps-alternative/</guid>
      <description>In result of Google&#39;s latest updates to its Maps API services (June 11, 2018), a lot of people are unhappy with these shocking changes.
 Increase in the price. Decrease in the free map loads. Obligation of adding a billing account. Etc&amp;hellip;  Therefore, a lot of those people are looking to replace their use of Google Maps to something as good (or at least remotely as good).</description>
    </item>
    
    <item>
      <title>Managing breadcrumbs in ASP.NET core using SmartBreadcrumbs</title>
      <link>https://blog.zhaytam.com/2018/06/24/asp-net-core-using-smartbreadcrumbs/</link>
      <pubDate>Sun, 24 Jun 2018 03:04:36 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2018/06/24/asp-net-core-using-smartbreadcrumbs/</guid>
      <description>Adding breadcrumbs to a website seems like an easy task and honestly, it should be. Unfortunately it&#39;s not, unless you want to end up copying the almost-same code in all your pages.
Today I&#39;ll be talking about how to add and manage breadcrumbs in an ASP.NET Core website using SmartBreadcrumbs (1.</description>
    </item>
    
    <item>
      <title>Newborn blog – What’s it about? – Hello World!</title>
      <link>https://blog.zhaytam.com/2018/06/22/newborn-blog-hello-world/</link>
      <pubDate>Fri, 22 Jun 2018 04:43:40 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2018/06/22/newborn-blog-hello-world/</guid>
      <description>Hello,
Since Awaiting bits is a newborn blog, I decided to take this opportunity to present myself as well as the purpose of this blog.
About me My name is Zanid Haytam and I was born in 1997.
I have been programming since the age of 13 and never looked back since.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://blog.zhaytam.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/about/</guid>
      <description>TODO</description>
    </item>
    
  </channel>
</rss>