<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blazor on Awaiting Bits</title>
    <link>https://blog.zhaytam.com/tags/blazor/</link>
    <description>Recent content in Blazor on Awaiting Bits</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.zhaytam.com/tags/blazor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blazor JavaScript Interop Batching</title>
      <link>https://blog.zhaytam.com/2021/09/23/blazor-js-interop-batching/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2021/09/23/blazor-js-interop-batching/</guid>
      <description>It&amp;rsquo;s been a long time sine I&amp;rsquo;ve written a blog post, and I miss it a lot!
Today, I&amp;rsquo;ll be talking about an experiment I did 2 months ago when I was trying to optimize Blazor.Diagrams: JS Interop Batching.
Context I&amp;rsquo;ve been working on my Diagramming Library for Blazor for quite some time now, and it basically takes a model (Diagram) that contains multiple nodes, ports and links (which are also models), renders it and makes it editable on the fly.</description>
    </item>
    
    <item>
      <title>Extract Available Settings Using C#</title>
      <link>https://blog.zhaytam.com/2020/10/19/available-settings-extraction/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2020/10/19/available-settings-extraction/</guid>
      <description>I was working these days on my library Blazor.Diagrams and I needed to write some documentation to show all the available/possible options. I could&amp;rsquo;ve done it manually, but there was quiet a few settings and I didn&amp;rsquo;t want to have to update the table every time new ones are added.</description>
    </item>
    
    <item>
      <title>Deploy Blazor WASM to GitHub Pages using GitHub Actions</title>
      <link>https://blog.zhaytam.com/2020/06/08/deploy-blazor-wasm-github-pages-using-actions/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2020/06/08/deploy-blazor-wasm-github-pages-using-actions/</guid>
      <description>Blazor WebAssembly was out a couple of weeks ago, and I can&amp;rsquo;t stop playing with it! It&amp;rsquo;s such a refreshing pause from all the JavaScript SPA frameworks.
As with any other SPA framework, you can deploy Blazor WASM in Github Pages! Today I&amp;rsquo;ll be showing you step by step how to do so.</description>
    </item>
    
    <item>
      <title>Whatâ€™s new in ASP.NET Core 3.0, Blazor and SignalR</title>
      <link>https://blog.zhaytam.com/2019/09/13/whats-new-asp-net-core-3/</link>
      <pubDate>Fri, 13 Sep 2019 18:06:20 +0000</pubDate>
      
      <guid>https://blog.zhaytam.com/2019/09/13/whats-new-asp-net-core-3/</guid>
      <description>I got interested in ASP.NET Core 3.0 since the first preview and followed it very closely. I started using it since preview2 and will now soon go to production with it (preview9).
I compiled this list to have all the new features, improvements and breaking changes that happened during this time for easy access and accessibility.</description>
    </item>
    
  </channel>
</rss>
